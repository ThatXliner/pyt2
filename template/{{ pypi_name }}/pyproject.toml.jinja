[tool.poetry]
name = "{{ pypi_name }}"
description = "{{ project_description }}"
authors = ["{{ author }}{% if email|length != 0 %} <{{ email }}>{% endif %}"]
version = "0.1.0"

readme = "README.md"
license = "GPL-3.0-or-later"

classifiers = [
    # Get the list of trove classifiers here: https://pypi.org/classifiers/
    "Programming Language :: Python :: Implementation :: CPython",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
]{% if add_docs %}
documentation = "https://{{ module_name.replace('_', '') }}.readthedocs.io/en/latest/index.html"{% endif %}
homepage = "https://github.com/{{ username }}/{{ pypi_name }}"
# keywords = ["awesome", "project"]  # Maximum of 5 keywords

[tool.poetry.dependencies]
python = "^3.8"{% if is_app %}

[tool.poetry.scripts]
{{ module_name }} = "{{ module_name }}.__main__:main"
{% endif %}

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
hypothesis = "^6.68.2"
mypy = "^1.0.1"
pytest = "^7.2.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^4.0.0"
ruff = "^0.0.249"
shed = "^0.10.9"
{% if add_docs %}
Sphinx = "^6.1.3"{% endif %}
toml = "^0.10.2"

[tool.poe.tasks]
# Code linting
mypy   = {cmd = "mypy {{ module_name }} --strict", help = "Run MyPy on codebase"}
ruff = {cmd = "ruff check {{ module_name }}", help = "Run Ruff on codebase"}
check_black = {cmd = "black {{ module_name }} --check"}
check_imports = {cmd = "ruff check {{ module_name }} --select I"}
style    = ["check_black", "check_imports"]
codebase = ["ruff", "mypy"]{% if add_docs %}
    [tool.poe.tasks.docs]
    cmd = "sphinx-build docs build"
    help = "Build documentation"{% endif %}

    [tool.poe.tasks.format]
    cmd = "shed"
    help = "Format code"

    [tool.poe.tasks.fix-ruff]
    cmd = "ruff {{ module_name }} --fix"
    help = "Ruff autofix"

    [tool.poe.tasks.lint]
    sequence = ["style", "codebase"]
    help = "Lint codebase"

    [tool.poe.tasks.test]
    cmd = "pytest -vvv --cov={{ module_name }}"
    help = "Simply run test suite"

    [tool.poe.tasks.ci]
    cmd = "pytest -vvv --cov={{ module_name }} --cov-report=xml"
    help = "This workflow is for Github Actions"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Same as Black.
line-length = 88
select = ["ALL"]
ignore = [
    # "D",    # "No docs"
    "T20",  # "Don't use print or pprint"
    # "ANN",  # Type annotation errors (or the lack of it)
    "ANN101",  # The type annotation for `self` is inferred
    "FBT",  # I actually don't know why this exists
            # and it seems useless so ignore it
    # Fix doc rule conflicts
    "D203",
    "D213"
]
target-version = "py38"
[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101", "D"]
"docs/conf.py" = ["INP001", "A001"]
