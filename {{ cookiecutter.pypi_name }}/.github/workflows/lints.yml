{% raw %}name: Code Quality
on:
  push:
  pull_request:
env:
  POETRY_VERSION: 1.3.0
jobs:
  style:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3
      - name: Install dependencies (UNIX)
        if: runner.os != 'Windows'
        run: |
          python3 -m pip install poetry==$POETRY_VERSION poethepoet
          poetry install
          poetry install  # Second time to install the project
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install poetry==$env:POETRY_VERSION poethepoet
          poetry install
          poetry install  # Second time to install the project
      - name: Run lints
        run: poe style
  linters:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3
      - name: Install dependencies (UNIX)
        if: runner.os != 'Windows'
        run: |
          python3 -m pip install poetry==$POETRY_VERSION poethepoet
          poetry install
          poetry install  # Second time to install the project
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          python -m pip install poetry==$env:POETRY_VERSION poethepoet
          poetry install
          poetry install  # Second time to install the project
      - name: Run lints
        run: poe codebase
{% endraw %}
